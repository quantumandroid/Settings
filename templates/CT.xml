<templateSet group="CT">
  <template name="t_list_activity_layout" value="&lt;TextView&#10;        android:id=&quot;@+id/title&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;TextView&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/search&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;16dp&quot;&#10;        android:layout_marginLeft=&quot;16dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:layout_marginEnd=&quot;16dp&quot;&#10;        android:layout_marginRight=&quot;16dp&quot;&#10;        android:ems=&quot;10&quot;&#10;        android:hint=&quot;Search...&quot;&#10;        android:inputType=&quot;textPersonName&quot;&#10;        android:paddingLeft=&quot;16dp&quot;&#10;        android:paddingRight=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/title&quot; /&gt;&#10;&#10;    &lt;ListView&#10;        android:id=&quot;@+id/list&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:layout_marginStart=&quot;16dp&quot;&#10;        android:layout_marginLeft=&quot;16dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:layout_marginEnd=&quot;16dp&quot;&#10;        android:layout_marginRight=&quot;16dp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/search&quot; /&gt;&#10;&#10;    &lt;android.support.design.widget.FloatingActionButton&#10;        android:id=&quot;@+id/fab_new&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginEnd=&quot;16dp&quot;&#10;        android:layout_marginRight=&quot;16dp&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:src=&quot;@drawable/ic_add&quot;&#10;        app:backgroundTint=&quot;@android:color/holo_red_dark&quot;&#10;        app:fabSize=&quot;normal&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;    " description="Design  layout of list activity" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="t_list_ativity_java" value="public class $list_act1$ extends AppCompatActivity {&#10;&#10;    private EditText SEARCH;&#10;&#10;    private ListView listView;&#10;&#10;    private FloatingActionButton FAB;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.$layout$);&#10;&#10;        SEARCH = findViewById(R.id.search);&#10;        listView = findViewById(R.id.list);&#10;        FAB = findViewById(R.id.fab_new);&#10;        FAB.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                startActivity(new Intent($context$, $detail_activity$.class));&#10;                finish();&#10;            }&#10;        });&#10;&#10;        getListData();&#10;    }&#10;&#10;    private void getListData() {&#10;&#10;        String sql = &quot;SELECT ID1,$T1$ FROM $tb$ WHERE $condition$&quot;;&#10;&#10;        HashMap&lt;String, String&gt; hashMap = new HashMap&lt;&gt;();&#10;        hashMap.put(key.PHP_REQUEST_KEY, key.$list_act1$_getListData);&#10;        hashMap.put(&quot;sql&quot;, sql);&#10;&#10;        MySql mySql = new MySql(this, key.PHP_URL, hashMap, true);&#10;        mySql.setOnDataLoadListener(new MySql.OnDataLoadListener() {&#10;            @Override&#10;            public void onDataLoaded(String data) {&#10;&#10;                List&lt;HashMap&lt;String, String&gt;&gt; list = new ArrayList&lt;&gt;();&#10;&#10;                try {&#10;                    JSONObject jsonObject = new JSONObject(data);&#10;                    JSONArray result = jsonObject.getJSONArray(key.TAG_JSON_ARRAY);&#10;&#10;                    for (int i = 0; i &lt; result.length(); i++) {&#10;&#10;                        HashMap&lt;String, String&gt; hashMap1 = new HashMap&lt;&gt;();&#10;&#10;                        JSONObject jo = result.getJSONObject(i);&#10;&#10;                        Iterator&lt;String&gt; iter = jo.keys();&#10;                        while (iter.hasNext()) {&#10;                            String key = iter.next();&#10;                            try {&#10;                                String value = jo.getString(key);&#10;                                hashMap1.put(key, value);&#10;&#10;                            } catch (JSONException e) {&#10;                                Toast.makeText($context$, e.toString(), Toast.LENGTH_LONG).show();&#10;                                break;&#10;                            }&#10;                        }&#10;                        &#10;                        list.add(hashMap1);&#10;&#10;                    }&#10;&#10;                    setAdapter(list);&#10;&#10;                } catch (JSONException e) {&#10;                    e.printStackTrace();&#10;                }&#10;&#10;&#10;            }&#10;        });&#10;    }&#10;&#10;    private void setAdapter(List&lt;HashMap&lt;String, String&gt;&gt; list) {&#10;        adp_$list_act1$ adapter = new adp_$list_act1$($context$, list);&#10;        listView.setAdapter(adapter);&#10;        adapter.setSearch(SEARCH);&#10;    }&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        startActivity(new Intent($context$, main.class));&#10;        finish();&#10;    }&#10;}&#10;" description="Java file of list activity template" toReformat="true" toShortenFQNames="true">
    <variable name="list_act1" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="layout" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="context" expression="variableOfType(&quot;android.content.Context&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="detail_activity" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="T1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="tb" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="condition" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="t_details_activity_java" value="&#10;public class $file_name$ extends AppCompatActivity implements View.OnClickListener {&#10;&#10;    private $alert_dialog$ dialog;&#10;&#10;    private String ID = &quot;&quot;;&#10;&#10;    private boolean IS_DETAILS = false;&#10;&#10;&#10;    @SuppressLint(&quot;RestrictedApi&quot;)&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.$layout$);&#10;&#10;        findViewById(R.id.fab_delete).setOnClickListener(this);&#10;        findViewById(R.id.save).setOnClickListener(this);&#10;&#10;        Bundle bundle = getIntent().getExtras();&#10;        if (bundle != null) {&#10;            ID = bundle.getString(key.ID1);&#10;            IS_DETAILS = true;&#10;            findViewById(R.id.fab_delete).setVisibility(View.VISIBLE);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onClick(View v) {&#10;&#10;        switch (v.getId()) {&#10;            &#10;            case R.id.save:&#10;                &#10;                if (IS_DETAILS){&#10;                    dialog = new $alert_dialog$(new View.OnClickListener() {&#10;                        @Override&#10;                        public void onClick(View v) {&#10;                            update(getUIData());&#10;                            if (dialog != null) {&#10;                                dialog.dismiss();&#10;                            }&#10;                        }&#10;                    });&#10;                    dialog.show(getFragmentManager(), &quot;Are you sure You want to UPDATE ?&quot;);&#10;                }else {&#10;                    dialog = new $alert_dialog$(new View.OnClickListener() {&#10;                        @Override&#10;                        public void onClick(View v) {&#10;                            insert(getUIData());&#10;                            if (dialog != null) {&#10;                                dialog.dismiss();&#10;                            }&#10;                        }&#10;                    });&#10;                    dialog.show(getFragmentManager(), &quot;Are you sure You want to INSERT ?&quot;);&#10;                }&#10;                &#10;                break;&#10;            case R.id.fab_delete:&#10;&#10;                dialog = new $alert_dialog$(new View.OnClickListener() {&#10;                    @Override&#10;                    public void onClick(View v) {&#10;                        delete(ID);&#10;                        if (dialog != null) {&#10;                            dialog.dismiss();&#10;                        }&#10;                    }&#10;                });&#10;                dialog.show(getFragmentManager(), &quot;Are you sure You want to DELETE ?&quot;);&#10;&#10;                break;&#10;        }&#10;    }&#10;&#10;    private void insert(HashMap&lt;String, String&gt; hashMap) {&#10;        if (hashMap == null) return;&#10;&#10;        hashMap.put(key.PHP_REQUEST_KEY, key.$file_name$_insert);&#10;&#10;        MySql mySql = new MySql(this, key.PHP_URL, hashMap, true);&#10;        mySql.setOnDataLoadListener(new MySql.OnDataLoadListener() {&#10;            @Override&#10;            public void onDataLoaded(String data) {&#10;                Toast.makeText($file_name$.this, data, Toast.LENGTH_SHORT).show();&#10;                if (data.equals(&quot;Saved Successfully&quot;)) {&#10;                    startActivity(new Intent($file_name$.this, $list_act$.class));&#10;                    finish();&#10;                }&#10;&#10;            }&#10;        });&#10;    }&#10;&#10;    private void select(String id) {&#10;&#10;        String sql = &quot;SELECT * FROM $tb$ WHERE ID1 = &quot; + id;&#10;        HashMap&lt;String, String&gt; hashMap = new HashMap&lt;&gt;();&#10;        hashMap.put(key.PHP_REQUEST_KEY, key.$file_name$_select);&#10;        hashMap.put(&quot;sql&quot;, sql);&#10;&#10;        MySql mySql = new MySql(this, key.PHP_URL, hashMap, true);&#10;        mySql.setOnDataLoadListener(new MySql.OnDataLoadListener() {&#10;            @Override&#10;            public void onDataLoaded(String data) {&#10;&#10;                try {&#10;                    JSONObject jsonObject = new JSONObject(data);&#10;                    JSONArray result = jsonObject.getJSONArray(key.TAG_JSON_ARRAY);&#10;                    JSONObject jo = result.getJSONObject(0);&#10;                    // todo get and handle data here&#10;                    HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;();&#10;                    Iterator&lt;String&gt; iterator = jo.keys();&#10;                    while (iterator.hasNext()) {&#10;                        String key = iterator.next();&#10;                        try {&#10;                            String value = jo.getString(key);&#10;                            map.put(key, value);&#10;&#10;                        } catch (JSONException e) {&#10;                            Toast.makeText($file_name$.this, e.toString(), Toast.LENGTH_LONG).show();&#10;                            break;&#10;                        }&#10;                    }&#10;&#10;                    setUIData(map);&#10;&#10;&#10;                } catch (JSONException e) {&#10;                    e.printStackTrace();&#10;                }&#10;&#10;            }&#10;        });&#10;    }&#10;    &#10;    private void update(HashMap&lt;String, String&gt; hashMap) {&#10;&#10;        if (hashMap == null) return;&#10;&#10;        hashMap.put(key.PHP_REQUEST_KEY, key.$file_name$_update);&#10;&#10;&#10;        MySql mySql = new MySql(this, key.PHP_URL, hashMap, true);&#10;        mySql.setOnDataLoadListener(new MySql.OnDataLoadListener() {&#10;            @Override&#10;            public void onDataLoaded(String data) {&#10;                Toast.makeText($file_name$.this, data, Toast.LENGTH_SHORT).show();&#10;                if (data.equals(&quot;Saved Successfully&quot;)) {&#10;                    startActivity(new Intent($file_name$.this, $list_act$.class));&#10;                    finish();&#10;                }&#10;&#10;            }&#10;        });&#10;    }&#10;    &#10;    private void delete(String id) {&#10;&#10;        String sql = &quot;DELETE FROM $tb$ WHERE ID1 =&quot; + id;&#10;        HashMap&lt;String, String&gt; hashMap = new HashMap&lt;&gt;();&#10;        hashMap.put(key.PHP_REQUEST_KEY, key.$file_name$_delete);&#10;        hashMap.put(&quot;sql&quot;, sql);&#10;&#10;        MySql mySql = new MySql(this, key.PHP_URL, hashMap, true);&#10;        mySql.setOnDataLoadListener(new MySql.OnDataLoadListener() {&#10;            @Override&#10;            public void onDataLoaded(String data) {&#10;                Toast.makeText($file_name$.this, data, Toast.LENGTH_SHORT).show();&#10;                if (data.equals(&quot;Deleted Successfully&quot;)) {&#10;                    startActivity(new Intent($file_name$.this, $list_act$.class));&#10;                    finish();&#10;                }&#10;&#10;            }&#10;        });&#10;    }&#10;&#10;    private HashMap&lt;String, String&gt; getUIData() {&#10;&#10;        if (!mandatoryFields())&#10;            return null;&#10;&#10;        HashMap&lt;String, String&gt; hashMap = new HashMap&lt;&gt;();&#10;        hashMap.put(key.ID1, ID);&#10;&#10;        return hashMap;&#10;&#10;    }&#10;&#10;    private void setUIData(HashMap&lt;String, String&gt; map){&#10;        //TODO set data here&#10;    }&#10;    &#10;    private boolean mandatoryFields() {&#10;        return true;&#10;    }&#10;&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        startActivity(new Intent($file_name$.this, $list_act$.class));&#10;        finish();&#10;    }&#10;}&#10;" description="java file of details activity" toReformat="true" toShortenFQNames="true">
    <variable name="file_name" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="alert_dialog" expression="" defaultValue="alert_fragment" alwaysStopAt="true" />
    <variable name="layout" expression="" defaultValue="layout" alwaysStopAt="true" />
    <variable name="list_act" expression="" defaultValue="list_activity" alwaysStopAt="true" />
    <variable name="tb" expression="" defaultValue="table_name" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="t_details_activity_layout" value=" &lt;TextView&#10;        android:id=&quot;@+id/title&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;TextView&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/title&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_margin=&quot;16dp&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot; &gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/save&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:text=&quot;Save&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&#10;    &lt;android.support.design.widget.FloatingActionButton&#10;        android:id=&quot;@+id/fab_delete&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginEnd=&quot;16dp&quot;&#10;        android:layout_marginRight=&quot;16dp&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:src=&quot;@drawable/ic_delete&quot;&#10;        android:visibility=&quot;invisible&quot;&#10;        app:backgroundTint=&quot;@android:color/holo_red_dark&quot;&#10;        app:fabSize=&quot;normal&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;" description="Design layout of details activity" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
</templateSet>